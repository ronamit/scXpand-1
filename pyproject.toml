[project]
name = "scxpand"
version = "0.3.7.dev3"
requires-python = ">=3.11,<3.14"
description = "Pan-cancer detection of T-cell clonal expansion from single-cell RNA sequencing"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Ron Amit", email = "ronamit@ef.technion.ac.il"},
    {name = "Ofir Shorer", email = "ofirshorer@campus.technion.ac.il"}
]
keywords = ["single-cell", "RNA-seq", "T-cell", "clonal-expansion", "machine-learning", "bioinformatics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "scanpy>=1.11.1",
    "plotly>=6.0.1",
    "matplotlib>=3.10.0",
    "scikit-learn>=1.7.1",
    "lightgbm>=4.6.0",
    "tensorboard>=2.19.0",
    "fire>=0.7.0",
    "optuna>=4.3.0",
    "seaborn>=0.13.2",
    "pydantic>=2.10.6",
    "anndata>=0.11.4",
    "structlog>=24.0.0",
    "igraph>=0.11.4",
    "shap>=0.48.0",
    "bbknn>=1.6.0",
    "scrublet>=0.2.3",
    "scirpy>=0.9.3",
    "tabulate>=0.9.0",
    "requests>=2.31.0",
    "tqdm>=4.66.0",
    "pooch>=1.8.0",
    "torch>=2.5.0",
    "torchvision>=0.20.0",
    "torchaudio>=2.5.0",
]

[project.urls]
Homepage = "https://github.com/yizhak-lab-ccg/scXpand"
Documentation = "https://scxpand.readthedocs.io/en/latest/"
Repository = "https://github.com/yizhak-lab-ccg/scXpand"
Issues = "https://github.com/yizhak-lab-ccg/scXpand/issues"
Logo = "https://raw.githubusercontent.com/yizhak-lab-ccg/scXpand/main/docs/images/scXpand_logo_gray.png"

[project.scripts]
scxpand = "scxpand.main:main"

[project.optional-dependencies]
cpu = [
    "torch>=2.5.0",
    "torchvision>=0.20.0",
    "torchaudio>=2.5.0",
]
cuda = [
    "torch>=2.5.0",
    "torchvision>=0.20.0",
    "torchaudio>=2.5.0",
]
dev = [
    "vulture>=2.14",
    "pytest>=8.3.4",
    "pytest-xdist>=3.6.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.12.7",
    "pre-commit>=4.2.0",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "jupyter>=1.1.1",
    "jupyter-client>=8.6.3",
    "jupyter-core>=5.7.2",
]
docs = [
    "sphinx>=8.1.3",
    "sphinx-book-theme>=1.1.4",
    "myst-nb>=1.3.0",
    "sphinx-copybutton>=0.5.2",
    "myst-parser>=4.0.1",
    "docutils>=0.21.2",
    "sphinxcontrib-bibtex>=2.6.5",
    "sphinx-autodoc-typehints>=3.0.1",
    "ipython>=9.5.0",
    "sphinxext-opengraph>=0.13.0",
    "sphinx-autobuild>=2025.8.25",
    "watchdog>=6.0.0",
    "colorama>=0.4.6",
]

[build-system]
requires = ["setuptools>=77.0.3", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["scxpand*"]
exclude = ["tests*", "docs*", "notebooks*", "temp*", "data*", "results*", "_notebooks*", "examples*", "scripts*"]

[tool.uv]
conflicts = [
    [
        { extra = "cpu" },
        { extra = "cuda" },
    ],
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = { index = "pytorch-cpu", extra = "cpu" }
torchvision = { index = "pytorch-cpu", extra = "cpu" }
torchaudio = { index = "pytorch-cpu", extra = "cpu" }


[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E402",  # module level import not at top of file (common in notebooks)
    "F841",  # local variable assigned but never used
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"*.ipynb" = ["E402"]  # notebooks often have imports after other code
"tests/**" = ["F841"]  # test files often have unused variables

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/scxpand",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
    "ignore::FutureWarning",
]

[tool.coverage.run]
source = ["src/scxpand"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.vulture]
# Configuration for vulture: https://github.com/jendrikseipp/vulture
# Ignore specific functions and variables that are used but not detected by static analysis
ignore_names = [
    # Functions that are used but not detected by vulture
    "encode_categorical_value",
    "encode_categorical_features_batch",
    "metrics_dict_to_dataframes",
    "plot_roc_curves_per_strata",
    "load_model",
    "model_config",
    "deterministic",
    "benchmark",
    "run_inference",
    "configure_logging",
    # InferenceResults methods
    "n_predictions",
    "has_metrics",
    "has_model_info",
    "get_auroc",
    "get_harmonic_avg_auroc",
    "to_dict",
    # Standard class method parameters
    "cls",
    # LightGBM enum values - part of complete API definition
    "DART",
    "GOSS",
    "RF",
    "MULTICLASS",
    "REGRESSION",
    "LAMBDARANK",
    "MULTICLASS_LOGLOSS",
    "RMSE",
    "MAE",
    "AUC",
    "NDCG",
    "download_model",
    "load_model",
    "load_sklearn_model",
    "load_nn_model",
    "load_ae_model",
    "load_and_validate_model",
    "load_model_state_dict",
]
paths = ["src/scxpand"]
min_confidence = 60
